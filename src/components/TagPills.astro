---
import { maugliConfig } from '../config/maugli.config';
import { LANGUAGES } from '../i18n/languages';
export interface Props {
    tags: Array<{ id: string; name: string; count: number }>;
    basePath?: string;
    class?: string;
}

const { tags = [], basePath = '/blog', class: className = '' } = Astro.props;

// Определяем куда ведут теги
const tagsBasePath = basePath === '/projects' ? '/projects/tags' : '/tags';

const lang = typeof maugliConfig.defaultLang === 'string' ? maugliConfig.defaultLang : 'en';
const languageObj = LANGUAGES.find((l) => l.code === lang) || LANGUAGES.find((l) => l.code === 'en');
const fallbackDict = LANGUAGES.find((l) => l.code === 'en')?.dict || {};
const dict = languageObj?.dict && Object.keys(languageObj.dict).length > 0 ? languageObj.dict : fallbackDict;
const tagPills = (dict as any).tagPills || (fallbackDict as any).tagPills || {};
---

{
    tags.length > 0 && (
        <div class:list={['flex flex-wrap gap-2 py-4 mb-6', className]}>
            {tags.map((tag) => {
                const ariaLabel = tagPills.ariaLabel
                    ? tagPills.ariaLabel.replace('{name}', tag.name).replace('{count}', tag.count)
                    : `Tag: ${tag.name} (${tag.count})`;
                return (
                    <a
                        href={`${tagsBasePath}/${tag.id}`}
                        aria-label={ariaLabel}
                        class="inline-flex items-center justify-center px-4 py-1.5 text-lg leading-[22px] font-inter font-normal whitespace-nowrap no-underline transition-all duration-200 ease-in-out hover:-translate-y-px rounded-3xl border border-[var(--border-main)] text-[var(--text-heading)] hover:bg-[var(--bg-muted)]"
                    >
                        {tag.name}
                        <span style="color: var(--text-heading); opacity: 0.6;"> ({tag.count})</span>
                    </a>
                );
            })}
        </div>
    )
}
