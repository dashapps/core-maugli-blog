---
import type { GetStaticPathsOptions, Page } from 'astro';
import { getEntry, type CollectionEntry } from 'astro:content';
import { getFilteredCollection } from '../../utils/content-loader';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import InfoCard from '../../components/InfoCard.astro';
import Pagination from '../../components/Pagination.astro';
import ProjectPreview from '../../components/ProjectPreview.astro';
import TagsSection from '../../components/TagsSection.astro';
import { maugliConfig } from '../../config/maugli.config';
import siteConfig from '../../data/site-config';
import { LANGUAGES } from '../../i18n/languages';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { slugify } from '../../utils/common-utils';
import { sortItemsByDateDesc } from '../../utils/data-utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const projects = (await getFilteredCollection('projects')).sort(sortItemsByDateDesc);
    return paginate(projects, { pageSize: siteConfig.projectsPerPage || 6 });
}

type Props = { page: Page<CollectionEntry<'projects'>> };

const { page } = Astro.props;
let portfolio = page.data;
let allProjects = await getFilteredCollection('projects');
// Получаем все уникальные теги проектов
const allTags = [...new Set(allProjects.flatMap((project) => project.data.tags || []))];
const tagsWithCount = allTags.map((tag) => ({
    id: slugify(tag),
    name: tag,
    count: allProjects.filter((project) => (project.data.tags || []).includes(tag)).length
}));
const projectsSection = await getEntry('pages', 'projects');

const dicts: Record<string, any> = Object.fromEntries(LANGUAGES.map((l) => [l.code, l.dict]));
const lang: string = typeof maugliConfig.defaultLang === 'string' && dicts[maugliConfig.defaultLang] ? maugliConfig.defaultLang : 'en';
const dict = dicts[lang] || dicts['en'];

// Получаем мультиязычный title для проектов (кейсов)
const projectsTitle = maugliConfig.pageTitles?.projects?.trim() || dict.pages?.projects?.title || dicts['en'].pages.projects.title;
// Описание для проектов (кейсов) — если появится в словаре или конфиге
const projectsDescription = maugliConfig.pageTitles?.projectsDescription?.trim?.() || '';
---

<BaseLayout
    title={projectsTitle}
    description={projectsDescription}
    image={{ src: '/dante-preview.jpg', alt: 'The preview of the site' }}
    showHeader={false}
    fullWidth={true}
>
    <div class="max-w-[1280px] mx-auto">
        <Breadcrumbs />

        <h1 class="mb-12 text-3xl leading-tight font-serif font-[800] sm:mb-16 sm:text-5xl" style="color: var(--text-heading)">{projectsTitle}</h1>

        <!-- Блок тегов -->
        {tagsWithCount.length > 0 && <TagsSection tags={tagsWithCount} basePath="/projects" totalCount={allProjects.length} class="mb-12" />}

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 mb-16">
            {portfolio.map((project) => <ProjectPreview project={project} />)}
        </div>

        <!-- Пагинация (показывается только если больше одной страницы) -->
        {page.lastPage > 1 && <Pagination page={page} class="my-16 sm:my-24" />}

        {
            projectsSection && (
                <InfoCard title={projectsSection.data.title} description={projectsSection.body} jsonld={projectsSection.data.jsonld} class="mt-16" />
            )
        }
    </div>
</BaseLayout>
