---
import { getCollection, getEntry } from 'astro:content';
import Button from '../components/Button.astro';
import InfoCard from '../components/InfoCard.astro';
import PostPreview from '../components/PostPreview.astro';
import Subscribe from '../components/Subscribe.astro';
import TagsSection from '../components/TagsSection.astro';
import { maugliConfig } from '../config/maugli.config';
import siteConfig from '../data/site-config';
import BaseLayout from '../layouts/BaseLayout.astro';
import { getAllTags, getPostsByTag, sortItemsWithFeaturedFirst } from '../utils/data-utils';

import { LANGUAGES } from '../i18n/languages';

const lang = typeof maugliConfig.defaultLang === 'string' ? maugliConfig.defaultLang : 'en';
const languageObj = LANGUAGES.find((l) => l.code === lang) || LANGUAGES.find((l) => l.code === 'en');
const fallbackDict = LANGUAGES.find((l) => l.code === 'en')?.dict || {};
const dict = languageObj?.dict && Object.keys(languageObj.dict).length > 0 ? languageObj.dict : fallbackDict;
const pages = (dict as any).pages || (fallbackDict as any).pages || {};
const buttons = (dict as any).buttons || (fallbackDict as any).buttons || {};

// Получаем все посты и показываем первые N постов
let allPosts = (await getCollection('blog')).sort(sortItemsWithFeaturedFirst);
if (!maugliConfig.showExamples) {
    allPosts = allPosts.filter((post) => !post.data.isExample);
}
const displayPosts = allPosts.slice(0, siteConfig.postsPerPage || 4);

// Получаем все рубрики
let allRubrics = await getCollection('tags');
if (!maugliConfig.showExamples) {
    allRubrics = allRubrics.filter((tag) => !tag.data.isExample);
}
const rubricSlugs = allRubrics.map((r) => r.data.slug);

// Получаем все теги с количеством постов и флагом рубрики
let tagsWithCount = getAllTags(allPosts).map((tag) => ({
    id: tag.id,
    name: tag.name,
    count: getPostsByTag(allPosts, tag.id).length,
    isRubric: rubricSlugs.includes(tag.id)
}));
if (maugliConfig.showOnlyRubricsTags) {
    tagsWithCount = tagsWithCount.filter((tag) => tag.isRubric);
} else {
    tagsWithCount = [...tagsWithCount.filter((tag) => tag.isRubric), ...tagsWithCount.filter((tag) => !tag.isRubric)];
}

// Проверяем, есть ли еще посты для пагинации
const hasMorePosts = allPosts.length > (siteConfig.postsPerPage || 4);

// Получаем данные для секции блога
const blogSection = await getEntry('pages', 'blog');
---

<BaseLayout
    title={maugliConfig.indexTitle || pages.index?.title || ''}
    description={pages.index?.description || ''}
    image={{ src: '/tr-prewiew.png', alt: 'The preview of the site' }}
    showHeader={false}
    fullWidth={true}
>
    <div class="max-w-[1280px] mx-auto">
        <h1 class="mb-12 text-3xl leading-tight font-serif font-[800] sm:mb-16 sm:text-5xl" style="color: var(--text-heading)">
            {pages.index?.articles || ''}
        </h1>
        <TagsSection tags={tagsWithCount} totalCount={allPosts.length} />
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 mb-16">
            {displayPosts.map((post) => <PostPreview post={post} />)}
        </div>

        {/* Кнопка "Ещё статьи" если есть еще посты */}
        {
            hasMorePosts && (
                <div class="text-center mb-8">
                    <Button href="/blog/2" style="color: var(--text-heading)">
                        {buttons.morePosts || ''}
                    </Button>
                </div>
            )
        }
        {
            blogSection && (
                <InfoCard
                    title={blogSection.data.title}
                    description={blogSection.body}
                    image={blogSection.data.image}
                    jsonld={blogSection.data.jsonld}
                    class="mb-16"
                />
            )
        }
    </div>
    {maugliConfig.subscribe?.enabled && <Subscribe class="my-16 sm:my-24" />}
</BaseLayout>
