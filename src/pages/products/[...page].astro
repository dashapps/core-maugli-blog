---
import type { GetStaticPathsOptions, Page } from 'astro';
import { getEntry, type CollectionEntry } from 'astro:content';
import { getFilteredCollection } from '../../utils/content-loader';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import InfoCard from '../../components/InfoCard.astro';
import Pagination from '../../components/Pagination.astro';
import ProductPreview from '../../components/ProductPreview.astro';
import { maugliConfig } from '../../config/maugli.config';
import siteConfig from '../../data/site-config';
import { LANGUAGES } from '../../i18n/languages';
import BaseLayout from '../../layouts/BaseLayout.astro';

const dicts: Record<string, any> = Object.fromEntries(LANGUAGES.map((l) => [l.code, l.dict]));
const lang: string = typeof maugliConfig.defaultLang === 'string' && dicts[maugliConfig.defaultLang] ? maugliConfig.defaultLang : 'en';
const dict = dicts[lang] || dicts['en'];

const productsTitle = maugliConfig.pageTitles?.products?.trim() || dict.pages?.products?.title || dicts['en'].pages.products.title;
const productsDescription = maugliConfig.productsDescription?.trim() || dict.pages?.products?.description || dicts['en'].pages.products.description;

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const products = (await getFilteredCollection('products')).sort((a, b) => {
        if (b.data.isFeatured !== a.data.isFeatured) return b.data.isFeatured - a.data.isFeatured;
        return (b.data.publishDate?.getTime?.() || 0) - (a.data.publishDate?.getTime?.() || 0);
    });
    return paginate(products, { pageSize: siteConfig.productsPerPage || 6 });
}

type Props = { page: Page<CollectionEntry<'products'>> };

const { page } = Astro.props;
let productList = page.data;
const productsSection = await getEntry('pages', 'products');
---

<BaseLayout title={productsTitle} description={productsDescription} showHeader={false} fullWidth={true}>
    <div class="max-w-[1280px] mx-auto">
        <Breadcrumbs />
        <h1 class="mb-12 text-3xl leading-tight font-serif font-[800] sm:mb-16 sm:text-5xl" style="color: var(--text-heading)">{productsTitle}</h1>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 mb-16">
            {productList.map((product) => <ProductPreview product={product} headingLevel="h2" />)}
        </div>
        {page.lastPage > 1 && <Pagination page={page} class="my-16 sm:my-24" />}
        {
            productsSection && (
                <InfoCard title={productsSection.data.title} description={productsSection.body} jsonld={productsSection.data.jsonld} class="mt-16" />
            )
        }
    </div>
</BaseLayout>
